'use strict';

angular
    .module('lwFilters')
    .filter('imgSrc', function(Alert, Domain) {
        // The list of image widths generated by the server. Must be sorted from lowest to highest.
        var WIDTHS = [300, 400, 600, 900, 1200];

        // Returns the best width for the given maximum width and array of widths. The array of
        // widths must be sorted from lowest to highest.
        function bestWidth(maxWidth, widths) {
            for (var i = widths.length - 1; i >= 0; i--) {
                var w = widths[i];
                if (w <= maxWidth) {
                    return w;
                }
            }
            return widths[0];
        }

        // Returns the list of available widths for the given media, sorted from lowest to highest.
        function availableWidths(media) {
            var a = [];
            for (var i = 0; i < WIDTHS.length; i++) {
                var gw = WIDTHS[i];
                if (gw < media.width) {
                    a.push(gw);
                } else {
                    break;
                }
            }
            a.push(media.width);
            return a;
        }

        // Returns the file suffix corresponding to the given width.
        function suffix(width) {
            return '_w' + width + 'p';
        }

        // Returns the photo media of the given article.
        function getPhoto(article) {
            switch (article.type) {
                case 'photo':
                    return article.internal.medias['main-photo'];
                case 'video':
                    return article.internal.medias['poster-photo'];
                default:
                    Alert.show('Article', 'error', 'Cannot get imgSrc for article id: ' +
                        article.id + ', type: ' + article.type);
                    return null;
            }
        }

        // Returns the src of the best image for the given article, with the given maximum width.
        return function(article, maxWidth) {
            if (!article) {
                return null;
            }

            // The filter can receive an optional argument specifying the maximum useful width.
            if (!maxWidth) {
                maxWidth = 600;
            }

            var media = getPhoto(article);
            if (!media || !media.filename) {
                return '';
            }

            var width = bestWidth(maxWidth, availableWidths(media));

            return Domain.media + '/media/' + media.filename + suffix(width) + '.jpg';
        };
    });
